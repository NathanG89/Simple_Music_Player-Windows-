<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MusicPlayerDatabaseDataSet" targetNamespace="http://tempuri.org/MusicPlayerDatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/MusicPlayerDatabaseDataSet.xsd" xmlns="http://tempuri.org/MusicPlayerDatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MusicPlayerDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MusicPlayerDatabaseConnectionString (Settings)" PropertyReference="ApplicationSettings.Simple_Music_Player_NateDraft.Properties.Settings.GlobalReference.Default.MusicPlayerDatabaseConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="playlistTableAdapter" GeneratorDataComponentClassName="playlistTableAdapter" Name="playlist" UserDataComponentName="playlistTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicPlayerDatabaseConnectionString (Settings)" DbObjectName="playlist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `playlist` WHERE ((`playlist_id` = ?) AND ((? = 1 AND `name` IS NULL) OR (`name` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_name" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `playlist` (`name`) VALUES (?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT playlist_id, name FROM playlist</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `playlist` SET `name` = ? WHERE ((`playlist_id` = ?) AND ((? = 1 AND `name` IS NULL) OR (`name` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_name" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="playlist_id" DataSetColumn="playlist_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="songTableAdapter" GeneratorDataComponentClassName="songTableAdapter" Name="song" UserDataComponentName="songTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicPlayerDatabaseConnectionString (Settings)" DbObjectName="song" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `song` WHERE ((`song_id` = ?) AND ((? = 1 AND `name` IS NULL) OR (`name` = ?)) AND ((? = 1 AND `artist` IS NULL) OR (`artist` = ?)) AND ((? = 1 AND `album` IS NULL) OR (`album` = ?)) AND ((? = 1 AND `genre` IS NULL) OR (`genre` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_name" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_artist" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="artist" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_artist" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="artist" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_album" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="album" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_album" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="album" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_genre" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_genre" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `song` (`name`, `artist`, `album`, `genre`) VALUES (?, ?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="artist" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="artist" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="album" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="album" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="genre" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT song_id, name, artist, album, genre FROM song</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `song` SET `name` = ?, `artist` = ?, `album` = ?, `genre` = ? WHERE ((`song_id` = ?) AND ((? = 1 AND `name` IS NULL) OR (`name` = ?)) AND ((? = 1 AND `artist` IS NULL) OR (`artist` = ?)) AND ((? = 1 AND `album` IS NULL) OR (`album` = ?)) AND ((? = 1 AND `genre` IS NULL) OR (`genre` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="artist" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="artist" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="album" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="album" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="genre" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_name" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_name" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_artist" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="artist" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_artist" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="artist" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_album" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="album" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_album" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="album" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_genre" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_genre" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="song_id" DataSetColumn="song_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="artist" DataSetColumn="artist" />
              <Mapping SourceColumn="album" DataSetColumn="album" />
              <Mapping SourceColumn="genre" DataSetColumn="genre" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="song_playlistTableAdapter" GeneratorDataComponentClassName="song_playlistTableAdapter" Name="song_playlist" UserDataComponentName="song_playlistTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MusicPlayerDatabaseConnectionString (Settings)" DbObjectName="song_playlist" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `song_playlist` WHERE ((`id` = ?) AND ((? = 1 AND `song_id` IS NULL) OR (`song_id` = ?)) AND ((? = 1 AND `playlist_id` IS NULL) OR (`playlist_id` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `song_playlist` (`song_id`, `playlist_id`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, song_id, playlist_id FROM song_playlist</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `song_playlist` SET `song_id` = ?, `playlist_id` = ? WHERE ((`id` = ?) AND ((? = 1 AND `song_id` IS NULL) OR (`song_id` = ?)) AND ((? = 1 AND `playlist_id` IS NULL) OR (`playlist_id` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_song_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="song_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_playlist_id" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="playlist_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="song_id" DataSetColumn="song_id" />
              <Mapping SourceColumn="playlist_id" DataSetColumn="playlist_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MusicPlayerDatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MusicPlayerDatabaseDataSet" msprop:Generator_UserDSName="MusicPlayerDatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="playlist" msprop:Generator_TableClassName="playlistDataTable" msprop:Generator_TableVarName="tableplaylist" msprop:Generator_TablePropName="playlist" msprop:Generator_RowDeletingName="playlistRowDeleting" msprop:Generator_UserTableName="playlist" msprop:Generator_RowChangingName="playlistRowChanging" msprop:Generator_RowEvHandlerName="playlistRowChangeEventHandler" msprop:Generator_RowDeletedName="playlistRowDeleted" msprop:Generator_RowEvArgName="playlistRowChangeEvent" msprop:Generator_RowChangedName="playlistRowChanged" msprop:Generator_RowClassName="playlistRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="playlist_id" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnplaylist_id" msprop:Generator_ColumnPropNameInRow="playlist_id" msprop:Generator_ColumnPropNameInTable="playlist_idColumn" msprop:Generator_UserColumnName="playlist_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="song" msprop:Generator_TableClassName="songDataTable" msprop:Generator_TableVarName="tablesong" msprop:Generator_TablePropName="song" msprop:Generator_RowDeletingName="songRowDeleting" msprop:Generator_UserTableName="song" msprop:Generator_RowChangingName="songRowChanging" msprop:Generator_RowEvHandlerName="songRowChangeEventHandler" msprop:Generator_RowDeletedName="songRowDeleted" msprop:Generator_RowEvArgName="songRowChangeEvent" msprop:Generator_RowChangedName="songRowChanged" msprop:Generator_RowClassName="songRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="song_id" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnsong_id" msprop:Generator_ColumnPropNameInRow="song_id" msprop:Generator_ColumnPropNameInTable="song_idColumn" msprop:Generator_UserColumnName="song_id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="artist" msprop:Generator_ColumnVarNameInTable="columnartist" msprop:Generator_ColumnPropNameInRow="artist" msprop:Generator_ColumnPropNameInTable="artistColumn" msprop:Generator_UserColumnName="artist" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="album" msprop:Generator_ColumnVarNameInTable="columnalbum" msprop:Generator_ColumnPropNameInRow="album" msprop:Generator_ColumnPropNameInTable="albumColumn" msprop:Generator_UserColumnName="album" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="genre" msprop:Generator_ColumnVarNameInTable="columngenre" msprop:Generator_ColumnPropNameInRow="genre" msprop:Generator_ColumnPropNameInTable="genreColumn" msprop:Generator_UserColumnName="genre" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="song_playlist" msprop:Generator_TableClassName="song_playlistDataTable" msprop:Generator_TableVarName="tablesong_playlist" msprop:Generator_TablePropName="song_playlist" msprop:Generator_RowDeletingName="song_playlistRowDeleting" msprop:Generator_UserTableName="song_playlist" msprop:Generator_RowChangingName="song_playlistRowChanging" msprop:Generator_RowEvHandlerName="song_playlistRowChangeEventHandler" msprop:Generator_RowDeletedName="song_playlistRowDeleted" msprop:Generator_RowEvArgName="song_playlistRowChangeEvent" msprop:Generator_RowChangedName="song_playlistRowChanged" msprop:Generator_RowClassName="song_playlistRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="song_id" msprop:Generator_ColumnVarNameInTable="columnsong_id" msprop:Generator_ColumnPropNameInRow="song_id" msprop:Generator_ColumnPropNameInTable="song_idColumn" msprop:Generator_UserColumnName="song_id" type="xs:int" minOccurs="0" />
              <xs:element name="playlist_id" msprop:Generator_ColumnVarNameInTable="columnplaylist_id" msprop:Generator_ColumnPropNameInRow="playlist_id" msprop:Generator_ColumnPropNameInTable="playlist_idColumn" msprop:Generator_UserColumnName="playlist_id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:playlist" />
      <xs:field xpath="mstns:playlist_id" />
    </xs:unique>
    <xs:unique name="song_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:song" />
      <xs:field xpath="mstns:song_id" />
    </xs:unique>
    <xs:unique name="song_playlist_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:song_playlist" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="playlistsong_playlist" msdata:parent="playlist" msdata:child="song_playlist" msdata:parentkey="playlist_id" msdata:childkey="playlist_id" msprop:Generator_UserChildTable="song_playlist" msprop:Generator_ChildPropName="Getsong_playlistRows" msprop:Generator_ParentPropName="playlistRow" msprop:Generator_UserRelationName="playlistsong_playlist" msprop:Generator_RelationVarName="relationplaylistsong_playlist" msprop:Generator_UserParentTable="playlist" />
      <msdata:Relationship name="songsong_playlist" msdata:parent="song" msdata:child="song_playlist" msdata:parentkey="song_id" msdata:childkey="song_id" msprop:Generator_UserChildTable="song_playlist" msprop:Generator_ChildPropName="Getsong_playlistRows" msprop:Generator_ParentPropName="songRow" msprop:Generator_UserRelationName="songsong_playlist" msprop:Generator_RelationVarName="relationsongsong_playlist" msprop:Generator_UserParentTable="song" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>